{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-socket-io\";\nexport let GenericService = /*#__PURE__*/(() => {\n  class GenericService {\n    constructor(http, socket) {\n      this.http = http;\n      this.socket = socket;\n      this.baseUrl = \"http://localhost:3000/\";\n    }\n\n    getAll(componentUrl, successCallback = () => {}) {\n      this.http.get(this.baseUrl + componentUrl).subscribe(response => {\n        successCallback(response);\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    getById(componentUrl, payload, successCallback = () => {}) {\n      this.http.get(this.baseUrl + componentUrl + payload).subscribe(response => {\n        successCallback(response);\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    getByMat(componentUrl, payload, successCallback = () => {}) {\n      this.http.get(this.baseUrl + componentUrl + payload).subscribe(response => {\n        successCallback(response);\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    autenticar(componentUrl, payload, successCallback = () => {}) {\n      this.http.post(this.baseUrl + componentUrl, payload).subscribe(response => {\n        successCallback(response);\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    getEstudianteDocs(componentUrl, payload, successCallback = () => {}) {\n      this.http.post(this.baseUrl + componentUrl, payload).subscribe(response => {\n        successCallback(response);\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    crear(componentUrl, payload, successCallback = () => {}) {\n      this.http.post(this.baseUrl + componentUrl, payload).subscribe(response => {\n        successCallback(response);\n        Swal.fire(\"Éxito!\", \"Creado exitosamente\", \"success\");\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    actualizar(componentUrl, id, payload, successCallback = () => {}) {\n      Swal.fire({\n        title: \"Está seguro de que quiere actualizar este registro?\",\n        showCancelButton: true,\n        confirmButtonText: \"Sí\",\n        cancelButtonText: \"Cancelar\",\n        icon: \"warning\"\n      }).then(() => {\n        this.http.put(this.baseUrl + componentUrl + id, payload).subscribe(response => {\n          successCallback(response);\n          Swal.fire(\"Éxito!\", \"Actualizado exitosamente\", \"success\");\n        }), error => {\n          console.log(error);\n        };\n      });\n    }\n\n    borrar(componentUrl, payload, successCallback = () => {}) {\n      Swal.fire({\n        title: \"Está seguro de que quiere borrar este registro?\",\n        text: \"Esta acción es irreversible\",\n        showCancelButton: true,\n        confirmButtonText: \"Sí\",\n        cancelButtonText: \"Cancelar\",\n        icon: \"warning\"\n      }).then(() => {\n        this.http.delete(this.baseUrl + componentUrl + payload).subscribe(response => {\n          successCallback(response);\n          Swal.fire(\"Éxito!\", \"Eliminado exitosamente\", \"success\");\n        }), error => {\n          console.log(error);\n        };\n      });\n    }\n\n    buscar(componentUrl, payload, successCallback = () => {}) {\n      this.http.post(this.baseUrl + componentUrl, payload).subscribe(response => {\n        successCallback(response);\n      }, error => {\n        console.log(error);\n      });\n    }\n\n    notificacionVista(componentUrl, successCallback = () => {}, payload) {\n      this.http.post(this.baseUrl + componentUrl, payload).subscribe(response => {\n        successCallback(response);\n      }, error => {\n        console.log(error);\n      });\n    }\n\n  }\n\n  GenericService.ɵfac = function GenericService_Factory(t) {\n    return new (t || GenericService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Socket));\n  };\n\n  GenericService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GenericService,\n    factory: GenericService.ɵfac,\n    providedIn: 'root'\n  });\n  return GenericService;\n})();","map":null,"metadata":{},"sourceType":"module"}